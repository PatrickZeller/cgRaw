#! /home/patrick/Application/Nuke12.0v2/libnuke-12.0.2.so -nx
version 12.0 v2
Group {
 inputs 2
 name "cgGrade"
 tile_color 0x151515ff
 label "light: \[value lightfilter]\nlobe: \[value componentfilter]"
 note_font_color 0x68f2ff
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nfilterparm = \['lightfilter', 'componentfilter', 'invertcomponentfilter', 'invertlightfilter']\nfor k in filterparm:\n    if knob.name() == k:\n        cgRaw.update_insides(node)"
 addUserKnob {20 grade l Grade}
 addUserKnob {1 lightfilter l Lights t "type the name of the lights you want to select, seperated by sapces. \"*\" selects every light in the scene"}
 lightfilter *
 addUserKnob {22 lightselector l select -STARTLINE T cgRaw.selection_panel('lights')}
 addUserKnob {6 invertlightfilter l invert t "inverts light filter" -STARTLINE}
 addUserKnob {1 componentfilter l Lobes t "type the name of the Lobe/Component you want to select, seperated by sapces. \"*\" selects every Component in the scene."}
 componentfilter *
 addUserKnob {22 componentselector l select -STARTLINE T cgRaw.selection_panel('component')}
 addUserKnob {6 invertcomponentfilter l invert t "inverts component filter" -STARTLINE}
 addUserKnob {22 force_update l update T cgRaw.update_insides(nuke.thisNode()) +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 blackpoint T master.blackpoint}
 addUserKnob {41 whitepoint T master.whitepoint}
 addUserKnob {41 black l lift T master.black}
 addUserKnob {41 white l gain T master.white}
 addUserKnob {41 multiply T master.multiply}
 addUserKnob {41 add l offset T master.add}
 addUserKnob {41 gamma T master.gamma}
 addUserKnob {41 reverse T master.reverse}
 addUserKnob {41 black_clamp l "black clamp" -STARTLINE T master.black_clamp}
 addUserKnob {41 white_clamp l "white clamp" -STARTLINE T master.white_clamp}
 addUserKnob {26 "" l mask T ""}
 addUserKnob {41 maskChannelInput l "" -STARTLINE T master.maskChannelInput}
 addUserKnob {41 inject -STARTLINE T master.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T master.invert_mask}
 addUserKnob {41 fringe -STARTLINE T master.fringe}
 addUserKnob {41 unpremult l "(un)premult by" T master.unpremult}
 addUserKnob {26 "" l "mix luminance" T ""}
 addUserKnob {41 enable_mix_luminance l "" -STARTLINE T master.enable_mix_luminance}
 addUserKnob {41 mix_luminance l "" -STARTLINE T master.mix_luminance}
 addUserKnob {41 mix T master.mix}
}
 Input {
  inputs 0
  name mask
  xpos 330
  ypos -115
  number 1
 }
 Input {
  inputs 0
  name rendering
  xpos 0
  ypos -181
 }
add_layer {rim_lgh_col_sss rim_lgh_col_sss.red rim_lgh_col_sss.green rim_lgh_col_sss.blue}
 Grade {
  inputs 1+1
  channels rim_lgh_col_sss
  name master
  xpos 0
  ypos 4
 }
 Expression {
  temp_expr0 _col_
  expr0 "\[join \[lsearch -inline -all \[channels this] *_col_*.red*] +]"
  expr1 "\[join \[lsearch -inline -all \[channels this] *_col_*.green*] +]"
  expr2 "\[join \[lsearch -inline -all \[channels this] *_col_*.blue*] +]"
  name develope
  xpos 0
  ypos 1168
 }
set N66c7120 [stack 0]
 Output {
  name Output1
  xpos 0
  ypos 1206
 }
push $N66c7120
 Viewer {
  frame 0
  frame_range 1-100
  fps 25
  viewerProcess "Rec.709 Alexa (Display)"
  name Viewer1
  xpos 377
  ypos 1364
 }
end_group
