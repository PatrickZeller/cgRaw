#! Y:/Applications/nuke_12.1v1/nuke-12.1.1.dll -nx
version 12.1 v1
Group {
 inputs 2
 name "cgGrade"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nfilterparm = \['lightfilter', 'componentfilter', 'invertcomponentfilter', 'invertlightfilter']\nfor k in filterparm:\n    if knob.name() == k:\n        cgRaw.update_insides(node)"
 tile_color 0x151515ff
 label "light: \[value lightfilter]\nlobe: \[value componentfilter]"
 note_font_color 0x68f2ff
 addUserKnob {20 grade l Grade}
 addUserKnob {1 lightfilter l Lights t "type the name of the lights you want to select, seperated by sapces. \"*\" selects every light in the scene"}
 lightfilter *
 addUserKnob {22 lightselector l select -STARTLINE T cgRaw.selection_panel('lights')}
 addUserKnob {6 invertlightfilter l invert t "inverts light filter" -STARTLINE}
 addUserKnob {1 componentfilter l Lobes t "type the name of the Lobe/Component you want to select, seperated by sapces. \"*\" selects every Component in the scene."}
 componentfilter *
 addUserKnob {22 componentselector l select -STARTLINE T cgRaw.selection_panel('component')}
 addUserKnob {6 invertcomponentfilter l invert t "inverts component filter" -STARTLINE}
 addUserKnob {22 force_update l update T cgRaw.update_insides(nuke.thisNode()) +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 blackpoint T master.blackpoint}
 addUserKnob {41 whitepoint T master.whitepoint}
 addUserKnob {41 black l lift T master.black}
 addUserKnob {41 white l gain T master.white}
 addUserKnob {41 multiply T master.multiply}
 addUserKnob {41 add l offset T master.add}
 addUserKnob {41 gamma T master.gamma}
 addUserKnob {41 reverse T master.reverse}
 addUserKnob {41 black_clamp l "black clamp" -STARTLINE T master.black_clamp}
 addUserKnob {41 white_clamp l "white clamp" -STARTLINE T master.white_clamp}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T mask_dx.maskChannelMask}
 addUserKnob {41 maskChannelInput l "" -STARTLINE T mask_dx.maskChannelInput}
 addUserKnob {41 inject -STARTLINE T mask_dx.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T mask_dx.invert_mask}
 addUserKnob {41 fringe -STARTLINE T mask_dx.fringe}
 addUserKnob {41 unpremult l "(un)premult by" T master.unpremult}
 addUserKnob {26 "" l "mix luminance" T ""}
 addUserKnob {41 enable_mix_luminance l "" -STARTLINE T master.enable_mix_luminance}
 addUserKnob {41 mix_luminance l "" -STARTLINE T master.mix_luminance}
 addUserKnob {41 mix T master.mix}
 addUserKnob {26 ""}
 addUserKnob {26 info l "" t "cgRaw v0.1.4" +STARTLINE T "<span style=\"color:#666\"><b>cgRaw v0.1.4 by Patrick Zeller</b> - <a href=\"https://github.com/PatrickZeller/\" style=\"color:#666;text-decoration: none;\">github</a></span>"}
}
 Input {
  inputs 0
  name rendering
  xpos 0
  ypos -181
 }
set N9fe2e800 [stack 0]
 Input {
  inputs 0
  name mask
  xpos 250
  ypos -160
  number 1
 }
 Switch {
  inputs 2
  which {{"1-\[exists parent.input1]" x59 0}}
  name Switch1
  xpos 250
  ypos -48
 }
 Invert {
  maskChannelMask none
  name Invert1
  xpos 250
  ypos 12
 }
 Dot {
  name Dot3
  xpos 284
  ypos 1554
 }
push $N9fe2e800
 Dot {
  name Dot1
  xpos -152
  ypos -12
 }
 Dot {
  name Dot2
  xpos -152
  ypos 1554
 }
push $N9fe2e800
add_layer {diffuse_col_top diffuse_col_top.red diffuse_col_top.green diffuse_col_top.blue}
 Grade {
  channels diffuse_col_top
  maskChannelMask none
  maskChannelInput -rgba.red
  name master
  xpos 0
  ypos -6
 }
 Expression {
  expr0 "\[join \[lsearch -inline -all \[channels this] *_col_*.red*] +]"
  expr1 "\[join \[lsearch -inline -all \[channels this] *_col_*.green*] +]"
  expr2 "\[join \[lsearch -inline -all \[channels this] *_col_*.blue*] +]"
  channel3 {none none none -rgba.alpha}
  maskChannelMask none
  name develope
  xpos 0
  ypos 1499
 }
 Dissolve {
  inputs 2+1
  which 1
  maskChannelMask none
  name mask_dx
  xpos 0
  ypos 1544
  disable {{maskChannelMask>0?0:1}}
 }
 Output {
  name Output1
  xpos 0
  ypos 1697
 }
end_group
