#! Y:/Applications/nuke_12.1v1/nuke-12.1.1.dll -nx
version 12.1 v1
Gizmo {
 inputs 2
 name "cgBlur"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nfilterparm = \['lightfilter', 'componentfilter', 'invertcomponentfilter', 'invertlightfilter']\nfor k in filterparm:\n    if knob.name() == k:\n        cgRaw.update_insides(node)"
 tile_color 0x151515ff
 label "light: \[value lightfilter]\nlobe: \[value componentfilter]"
 note_font_color 0x68f2ff
 addUserKnob {20 blur l Blur}
 addUserKnob {1 lightfilter l Lights t "type the name of the lights you want to select, seperated by sapces. \"*\" selects every light in the scene"}
 lightfilter *
 addUserKnob {22 lightselector l select -STARTLINE T cgRaw.selection_panel('lights')}
 addUserKnob {6 invertlightfilter l invert t "inverts light filter" -STARTLINE}
 addUserKnob {1 componentfilter l Lobes t "type the name of the Lobe/Component you want to select, seperated by sapces. \"*\" selects every Component in the scene."}
 componentfilter *
 addUserKnob {22 componentselector l select -STARTLINE T cgRaw.selection_panel('component')}
 addUserKnob {6 invertcomponentfilter l invert t "inverts component filter" -STARTLINE}
 addUserKnob {22 force_update l update T cgRaw.update_insides(nuke.thisNode()) +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 size T master.size}
 addUserKnob {41 filter T master.filter}
 addUserKnob {41 quality l "" -STARTLINE T master.quality}
 addUserKnob {41 crop l "crop to format" -STARTLINE T master.crop}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {41 maskChannelMask l mask -STARTLINE T mask_dx.maskChannelMask}
 addUserKnob {41 maskChannelInput l "" -STARTLINE T mask_dx.maskChannelInput}
 addUserKnob {41 inject -STARTLINE T mask_dx.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T mask_dx.invert_mask}
 addUserKnob {41 fringe -STARTLINE T mask_dx.fringe}
 addUserKnob {41 mix T master.mix}
}
 Input {
  inputs 0
  name rendering
  xpos 0
  ypos -202
 }
set Nab7dc000 [stack 0]
 Input {
  inputs 0
  name mask
  xpos 348
  ypos -160
  number 1
 }
 Switch {
  inputs 2
  which {{"1-\[exists parent.input1]" x59 0}}
  name Switch1
  xpos 241
  ypos -81
 }
 Invert {
  name Invert1
  xpos 241
  ypos -21
 }
 Dot {
  name Dot3
  xpos 275
  ypos 1510
 }
push $Nab7dc000
 Dot {
  name Dot1
  xpos -152
  ypos -75
 }
 Dot {
  name Dot2
  xpos -152
  ypos 1510
 }
push $Nab7dc000
 Blur {
  name master
  xpos 0
  ypos -79
 }
 Expression {
  temp_expr0 _col_
  expr0 "\[join \[lsearch -inline -all \[channels this] *_col_*.red*] +]"
  expr1 "\[join \[lsearch -inline -all \[channels this] *_col_*.green*] +]"
  expr2 "\[join \[lsearch -inline -all \[channels this] *_col_*.blue*] +]"
  name develope
  xpos 0
  ypos 1449
 }
 Dissolve {
  inputs 2+1
  which 1
  maskChannelMask none
  name mask_dx
  xpos 0
  ypos 1500
 }
 Output {
  name Output1
  xpos 0
  ypos 1587
 }
 Viewer {
  inputs 0
  frame_range 1-100
  fps 25
  viewerProcess "Rec.709 Alexa (SL)"
  name Viewer1
  xpos 377
  ypos 1364
 }
end_group
